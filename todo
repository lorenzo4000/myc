-> typecheck arguments when calling {
	-> store parameters in function *_symbol
	-> compare types and number of arguments during typechecking 
}

-> static array as function parameter

-> static and dynamic array declaration syntax
.  literal array syntax
-> typecheck array
-> codegen array
-> allocate dyn. array
-> resize dyn. array
-> append to  dyn. array

-> refactor codegen move/copy/reference generic stuff, 
   tpecifically the register pair thing, that's really really bad!!

.  String type (with literals and stuff)
.  Struct literals
.  Misecellaneus types, operators and other stuff
.  implicit integer literal casts
.  prepar: build dep. graph and do cycle detection before importing


.  more complex typechecking {
	  .  statically typechecked generals
	  .  passing types as arguments
   }

.  Detach yourself from C std {
   	  .  make --nocstd option
   	  .  write linux syscall wrappers
   }

.  Make codegen.go more target agnostic, and codegen_amd64.go more target specific

. become a more productive programmer


-> : wip
.  : TODO
