@import "lib/memory.myc"
@import "lib/c/stdio.myc"

function sum(:in []int64) int64 {
	:res int64 = 0;
	:length int64 = [int64]in.len / 8;

	for(:i int64 = 0; i < length; i = i + 1) {
		printf("heeeyy  : %d\n".data, in[i]);
		res = res + in[i];
	}

	return res	;
}

function sum_20(:in [20]int64) int64 {
	:res int64 = 0;
	:length int64 = 20; 

	for(:i int64 = 0; i < length; i = i + 1) {
		printf("heeeyy  : %d\n".data, in[i]);
		res = res + in[i];
	}

	return res	;
}

struct Test {
	:field int64;
}

function main() {
	:static_array [20]int64 = [20]int64{ 
		10,
		156,
		10,
		10,
		13455,
		10,
		1234,
		10,
		10,
		1240,
		10,
		10,
		10,
		10,
		10,
		10,
		10,
		10,
		10,
		15,
	 };


	// reference assignment (copy pointer and length)	
	:dynamic_array [20]int64;
	
	{
		for(:j int64 = 0; j < 20; j = j + 1) {
			printf("STATIC %d : %d\n".data, j, static_array[j]);
		}
		
		for(:j int64 = 0; j < 20; j = j + 1) {
			dynamic_array[j] = static_array[j];
		}

		for(:k int64 = 0; k < 20; k = k + 1) {
			printf("DYNAMIC asdas %d : %d\n".data, k, dynamic_array[k]);
		}
	};
	
	return;
}
