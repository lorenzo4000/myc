/*
	we rapresent numbers as binary vector of size 10 (0-9)
	the image is big 256x256 rgb pixels, so...
	
		first layer has 10 neurons with how many weights?
		256*256*4 = 262144 weights
	

*/

@import "lib/c/stdio.myc"
@import "lib/memory.myc"

//  ssize_t read(int fd, void *buf, size_t count);
function read(:fd int32, :buf *?, :count uint64) uint64 external;

// int open(const char *pathname, int flags, mode_t mode);
function open(:pathname *uint8, :flags int32, :mode uint32) int32 external;

struct Neuron {
	:weights [262144]uint32;
	:biases  [65536]uint32;
}

function read_dataset(:filename string) [][65536]uint32 {
	// open file read-only
	:fd int32 = open(filename.data, 0, 0);

	:images [][65536]uint32	= allocate(60000 * 262144);

	// magic value
	:magic_value uint32;
	read(fd, &magic_number, 4);
	
	// number of images
	:magic_value uint32;
	read(fd, &magic_number, 4);

	

	return images;
}

function main() {
	:image_set [][65536]uint32 = read_dataset();

	printf("%lld\n".data, image_set.len);
}
